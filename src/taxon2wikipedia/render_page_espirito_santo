#!/usr/bin/env python3

from SPARQLWrapper import SPARQLWrapper, JSON
import pandas as pd
from jinja2 import Template
import sys
from qid2taxobox import *
from cleanup import merge_equal_refs
import pywikibot
from pathlib import Path
from process_reflora import *
import click
import webbrowser
from wdcuration import render_qs_url

HERE = Path(__file__).parent.resolve()


def get_gbif_ref(qid):
    query = f"""
    SELECT * WHERE {{ 
        wd:{qid} wdt:P846 ?gbif_id .
        wd:{qid} wdt:P225 ?taxon_name . }}
    """
    df = get_rough_df_from_wikidata(query)
    if "gbif_id.value" not in df:
        return ""
    gbif_id = list(df["gbif_id.value"])[0]
    taxon_name = list(df["taxon_name.value"])[0]
    ref = f"""<ref>{{{{Citar web|url=https://www.gbif.org/species/{gbif_id}|titulo={taxon_name}|acessodata=2022-04-18|website=www.gbif.org|lingua=en}}}}</ref>"""
    return ref


def render_taxonomy(reflora_data, results_df, taxon_qid):

    if "taxon_authorLabel.value" not in results_df:
        description = ""
    else:
        taxon_author_labels = results_df["taxon_authorLabel.value"].values
        description_year = results_df["description_year.value"][0]

        taxon_author_labels = [f"[[{name}]]" for name in taxon_author_labels]
        description = f"A espécie foi descrita em [[{description_year}]] por {render_list_without_dict(taxon_author_labels)}. {get_gbif_ref(taxon_qid)}"

    text = f"""== Taxonomia ==
{description}
{get_subspecies_from_reflora(reflora_data)}
{get_synonyms_from_reflora(reflora_data)}"""

    return text


@click.command()
@click.argument("taxon-qid")
@click.option("--scope-name", default="planta", help="O escopo do táxon alvo.")
@click.option(
    "--reflora-id", default="search", help="O número do taxon na base Reflora."
)
def main(scope_name: str, taxon_qid: str, reflora_id: str):

    template_path = Path(f"{HERE}/../data/full_query_taxon.rq.jinja")
    t = Template(template_path.read_text())
    query = t.render(taxon=taxon_qid)

    results_df = get_rough_df_from_wikidata(query)

    parent_taxon_df = get_parent_taxon_df(taxon_qid)
    print(parent_taxon_df)
    family = parent_taxon_df["taxonName.value"][
        parent_taxon_df["taxonRankLabel.value"] == "família"
    ].item()
    genus = parent_taxon_df["taxonName.value"][
        parent_taxon_df["taxonRankLabel.value"] == "género"
    ].item()
    taxon_name = results_df["taxon_name.value"][0]

    if "description_year.value" not in results_df:
        year_cat = ""
    else:
        description_year = results_df["description_year.value"][0]
        year_cat = f"[[Categoria:Plantas descritas em {description_year}]]"

    reflora_url = (
        f"""http://servicos.jbrj.gov.br/flora/search/{taxon_name.replace(" ", "_")}"""
    )
    webbrowser.open(
        f"""https://scholar.google.com/scholar?q=%22{taxon_name.replace(" ", "+")}%22+scielo"""
    )
    webbrowser.open(
        f"""https://google.com/search?q=%22{taxon_name.replace(" ", "+")}%22"""
    )
    if reflora_id == "search":
        r = requests.get(reflora_url)
        webbrowser.open(reflora_url)
        reflora_id = r.url.split("FB")[-1]
    reflora_data = get_reflora_data(reflora_id)

    qs = print_qs_for_names(reflora_data, taxon_qid)
    print(qs)
    webbrowser.open(render_qs_url(qs))
    proceed = input("Enter anything to proceed.")
    common_name_text = render_common_name(results_df)
    taxobox = get_taxobox(taxon_qid)

    wiki_page = (
        f"""
{taxobox}
'''''{taxon_name}'''''{common_name_text} é uma espécie de  """
        f"[[{scope_name}]] do gênero ''[[{genus}]]'' e da família [[{family}]]."
        f"""
{render_taxonomy(reflora_data, results_df, taxon_qid)}
{render_ecology(reflora_data)}
== Conservação ==
A espécie faz parte da [[Lista Vermelha da IUCN|Lista Vermelha]] das espécies ameaçadas do estado do [[Espírito Santo (estado)|Espírito Santo]], no sudeste do [[Brasil]]. A lista foi publicada em 13 de junho de 2005 por intermédio do decreto estadual nº 1.499-R. <ref>{{{{Citar web|url=https://iema.es.gov.br/especies-ameacadas/fauna_ameacada|titulo=IEMA - Espécies Ameaçadas|acessodata=2022-04-12|website=iema.es.gov.br}}}}</ref>
{render_distribution_from_reflora(reflora_data)}
{render_domains(reflora_data)}
{{{{Referencias}}}}
== Ligações externas ==
* [http://reflora.jbrj.gov.br/reflora/listaBrasil/FichaPublicaTaxonUC/FichaPublicaTaxonUC.do?id=FB6007 ''{taxon_name}'' no projeto Flora e Funga do Brasil]
{{{{Controle de autoridade|colapsar}}}}
{{{{esboço-{scope_name}}}}}

[[Categoria:{family}]]
[[Categoria:{genus}]]
{year_cat}"""
    )

    categories = [
        "Plantas",
        "Flora do Brasil",
        "Flora do Espírito Santo",
        "Wikiconcurso Wiki Loves Espírito Santo (artigos)",
    ]

    for cat in categories:
        wiki_page = (
            wiki_page
            + f"""
[[Categoria:{cat}]]"""
        )

    print("===== Saving wikipage =====")
    filepath = "wikipage.txt"
    wiki_page = merge_equal_refs(wiki_page)
    with open(filepath, "w+") as f:
        f.write(wiki_page)

    create = input("Create page with pywikibot? (y/n)")
    if create == "y":
        from pywikibot.page import Page

        site = pywikibot.Site("pt", "wikipedia")
        newPage = Page(site, taxon_name)
        newPage.text = wiki_page
        newPage.save(
            "Esboço criado com código de https://github.com/lubianat/taxon2wikipedia"
        )
    else:
        print("quitting...")
        quit()

    site = pywikibot.Site("wikidata", "wikidata")
    repo = site.data_repository()
    item = pywikibot.ItemPage(repo, taxon_qid)

    data = [{"site": "ptwiki", "title": taxon_name.replace(" ", "_")}]
    item.setSitelinks(data)

    webbrowser.open(
        f"""https://pt.wikipedia.org/wiki/{taxon_name.replace(" ", "_")}?veaction=edit"""
    )

    get_cc_by_comment(reflora_data)


def render_common_name(results_df):
    try:
        common_name = results_df["taxon_common_name_pt.value"][0]
        return f""", também conhecido como '''{common_name}''',"""
    except:
        return ""


if __name__ == "__main__":
    main()
